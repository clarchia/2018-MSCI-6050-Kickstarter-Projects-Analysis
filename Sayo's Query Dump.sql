
/*
Average Active Days, and average Amount Pledged by Sub Categories
*/
SELECT ROUND(AVG (PRO.ACTIVEDAYS)) AS Average_Number_of_Active_Days, CAT.SUBCATEGORY, 
    ROUND(AVG(PLEDGEDAMOUNT), 1) AS AVERAGE_AMOUNT_PLEDGED
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAT.SUBCATEGORY
ORDER BY ROUND(AVG(PLEDGEDAMOUNT), 1) DESC;


/*
Average Active Days, and average Amount Pledged by Sub Categories
*/
SELECT CAT.SUBCATEGORY, ROUND(AVG(PLEDGEDAMOUNT), 1) AS AVERAGE_AMOUNT_PLEDGED
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAT.SUBCATEGORY
ORDER BY ROUND(AVG(PLEDGEDAMOUNT), 1) DESC
FETCH NEXT 10 ROWS;

/*
Total Pledged Amount by Day of Week for Successful Projects
*/
SELECT CAL.DAYOFWEEK, PRO.PROJECTSTATE, SUM(PRO.PLEDGEDAMOUNT)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAL.DAYOFWEEK, PRO.PROJECTSTATE
HAVING PRO.PROJECTSTATE = 'successful'
ORDER BY SUM(PRO.PLEDGEDAMOUNT) DESC;

/*
Total Pledged Amount by Day of Week and Project Status
*/
SELECT CAL.DAYOFWEEK, PRO.PROJECTSTATE, SUM(PRO.PLEDGEDAMOUNT)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAL.DAYOFWEEK, PRO.PROJECTSTATE
ORDER BY SUM(PLEDGEDAMOUNT) DESC;


/*
Total Amount Pledged by Year and ProjectState
*/
SELECT *
 FROM (
    SELECT CAL.YEAR, PRO.PROJECTSTATE, SUM(PRO.PLEDGEDAMOUNT)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAL.YEAR, PRO.PROJECTSTATE
ORDER BY SUM(PLEDGEDAMOUNT) DESC
 )
WHERE ROWNUM <= 10;



/*
Total Amount of Projects by Year and ProjectState
*/
SELECT CAL.YEAR, PRO.PROJECTSTATE, COUNT(PRO.PROJECTID)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAL.YEAR, PRO.PROJECTSTATE
ORDER BY PRO.PROJECTSTATE, SUM(PLEDGEDAMOUNT) DESC;


/*
Total Amount Pledged by DayofWeek and ProjectState
*/
SELECT CAL.DAYOFWEEK, PRO.PROJECTSTATE, SUM(PRO.PLEDGEDAMOUNT)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAL.DAYOFWEEK, PRO.PROJECTSTATE
ORDER BY SUM(PLEDGEDAMOUNT) DESC;

/*
Total Amount Pledged by DayofWeek and Project State
*/
SELECT CAL.DAYOFWEEK, SUM(PRO.PLEDGEDAMOUNT)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAL.DAYOFWEEK
ORDER BY SUM(PLEDGEDAMOUNT) DESC;

/*
Total Proportion Reached by Main Categories
*/
SELECT CAT.MAINCATEGORY, SUM(PRO.PROPORTIONREACHED)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAT.MAINCATEGORY
ORDER BY SUM(PRO.PROPORTIONREACHED) DESC;


/*
Total Proportion Reached and Total Backers by Countries
*/
SELECT COU.COUNTRYCODE, SUM(PRO.PROPORTIONREACHED), SUM(PRO.BACKERS)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY COU.COUNTRYCODE
ORDER BY SUM(PRO.PROPORTIONREACHED) DESC;

/*
Number of Projects by Countries and Project State
*/
SELECT COU.COUNTRYCODE, PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) AS NUM_OF_PROJECTS
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY COU.COUNTRYCODE, PRO.PROJECTSTATE
ORDER BY COUNT(PRO.PROJECTSTATE) DESC;

/*
Total Number of Projects by Countries 
*/
SELECT COU.COUNTRYCODE, COUNT(PRO.PROJECTID) AS NUM_OF_PROJECTS
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY COU.COUNTRYCODE
ORDER BY COUNT(PRO.PROJECTID) DESC;


/*
Total Number of Projects by Year and Project State
*/
SELECT CAL.YEAR, PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) AS NUM_OF_PROJECTS
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAL.YEAR, PRO.PROJECTSTATE
ORDER BY PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) DESC;


/*
Total Number of Backers by Main Categories
*/
SELECT CAT.MAINCATEGORY, COUNT(PRO.BACKERS) AS NUM_OF_BACKERS
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAT.MAINCATEGORY
ORDER BY COUNT(PRO.BACKERS) DESC;

/*
Total Number of Backers by Year
*/
SELECT CAL.YEAR, COUNT(PRO.BACKERS) AS NUM_OF_BACKERS
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAL.YEAR
ORDER BY COUNT(PRO.BACKERS) DESC;

/*
Total Number of Projects by Categories that were successful
*/
SELECT CAT.MAINCATEGORY, PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) AS NUM_OF_PROJECTS
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAT.MAINCATEGORY, PRO.PROJECTSTATE
HAVING PRO.PROJECTSTATE = 'successful'
ORDER BY PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) DESC;

/*
Projects by Main Categories and Project State that have less than 100 backers
*/
SELECT CAT.MAINCATEGORY, PRO.PROJECTID, PRO.PROJECTSTATE, PRO.BACKERS
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
    AND PRO.BACKERS < 100;

/*
Total Number of Projects by Main Categories and Project State that have less than 100 backers
*/    
SELECT CAT.MAINCATEGORY, PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) AS Num_of_Projects 
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
    AND PRO.BACKERS < 100
GROUP BY CAT.MAINCATEGORY, PRO.PROJECTSTATE
ORDER BY COUNT(PRO.PROJECTID) DESC;

/*
Total Number of Projects by Main Categories that were successful and had less than 100 backers
*/
SELECT CAT.MAINCATEGORY, PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) AS Num_of_Projects 
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
    AND PRO.BACKERS < 100
    AND PRO.PROJECTSTATE = 'successful'
GROUP BY CAT.MAINCATEGORY, PRO.PROJECTSTATE
ORDER BY COUNT(PRO.PROJECTID) DESC;

/*
Average Proportion Reached and Total Backers by Countries
*/
SELECT COU.COUNTRYCODE, AVG(PRO.PROPORTIONREACHED), SUM(PRO.BACKERS)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY COU.COUNTRYCODE
ORDER BY AVG(PRO.PROPORTIONREACHED) DESC;

/*
Mean Proportion Reached by Main Categories
*/
SELECT CAT.MAINCATEGORY, AVG(PRO.PROPORTIONREACHED)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAT.MAINCATEGORY
ORDER BY AVG(PRO.PROPORTIONREACHED) DESC;
                  
/*
Total number of projects started in each country
*/

SELECT COU.COUNTRYNAME, COUNT(PRO.ProjectID) AS NumberOfProjects
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY COU.COUNTRYNAME
ORDER BY COUNT(PRO.ProjectID) DESC;


/*
Number of projects started in each country, 
broken down to final project results (successful, failed, canceled, etc)
*/

SELECT COU.COUNTRYNAME, PRO.PROJECTSTATE, 
    COUNT(PRO.ProjectID) AS NumberOfProjects, 
    ROUND(AVG(PLEDGEDAMOUNT), 1) AS AVERAGEAMOUNTPLEDGED
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY COU.COUNTRYNAME, PRO.PROJECTSTATE
ORDER BY ROUND(AVG(PLEDGEDAMOUNT), 1) DESC;


/*
Number of projects and average $ pledged started in each month (regardless of the year), 
broken down to final project results (successful, failed, canceled, etc)
*/

SELECT CAL.MONTH, 
    PRO.PROJECTSTATE, 
    COUNT(PRO.ProjectID) AS NumberOfProjects, 
    ROUND(AVG(PLEDGEDAMOUNT), 1) AS AVERAGEAMOUNTPLEDGED
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAL.MONTH, PRO.PROJECTSTATE
ORDER BY ROUND(AVG(PLEDGEDAMOUNT), 1) DESC;
                  
                  
--Query IDEAS FOR DB MGMT PROJECT:
--1.	Which countries have had the highest % of successful kickstarter projects?
--2.	Which Main Category has had the highest % of successful projects?
--3.	Which Sub Category within this has had the highest % of successful projects?
--4.	Which Kickstarter has raised the most $?
--5.	Which Kickstarter has raised the most $ per backer?
--6.	Avg kickstarter $ raised per year
SELECT C.YEAR, AVG(P.PLEDGEDAMOUNT)AS AVG_PLEDGED
FROM PROJECT_T P, CALENDAR_T C
WHERE C.DATES = P.LAUNCHDATE
GROUP BY C.YEAR
ORDER BY C.YEAR ASC;
--7.	Avg kickstarter $ raised per month
SELECT C.MONTH, AVG(P.PLEDGEDAMOUNT)AS AVG_PLEDGED
FROM PROJECT_T P, CALENDAR_T C
WHERE C.DATES = P.LAUNCHDATE
GROUP BY C.MONTH
ORDER BY C.MONTH;

--8.	Avg goal
SELECT AVG(GOALAMOUNT) 
FROM PROJECT_T;

--9.	% of projects raising $0 --THIS DOESNT WORK YET!
SELECT *
FROM (SELECT COUNT(PROJECTID) FROM PROJECT_T WHERE PLEDGEDAMOUNT = 0);

SELECT *
FROM (SELECT COUNT(PROJECTID) FROM PROJECT_T);

--10.	I think it would be cool to do something with the %Like% function in the title but am unsure of what would make the most sense? Maybe like something sad or dramatic?

--11.   Avg $ raised per country
SELECT C.COUNTRYNAME, AVG(P.PLEDGEDAMOUNT)AS AVG_PLEDGED
FROM COUNTRY_T C, PROJECT_T P
WHERE C.COUNTRYCODE = P.COUNTRYCODE
GROUP BY c.countryname
ORDER BY AVG_PLEDGED DESC;

--12. Number of campaigns per year
SELECT C.YEAR, COUNT(P.PROJECTID)AS Number_of_campaigns
FROM PROJECT_T P, CALENDAR_T C
WHERE C.DATES = P.LAUNCHDATE
GROUP BY C.YEAR
ORDER BY C.YEAR ASC;
