
/*
Average Active Days, and average Amount Pledged by Sub Categories
*/
SELECT ROUND(AVG (PRO.ACTIVEDAYS)) AS Average_Number_of_Active_Days, CAT.SUBCATEGORY, 
    ROUND(AVG(PLEDGEDAMOUNT), 1) AS AVERAGE_AMOUNT_PLEDGED
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAT.SUBCATEGORY
ORDER BY ROUND(AVG(PLEDGEDAMOUNT), 1) DESC;


/*
Average Active Days, and average Amount Pledged by Sub Categories
*/
SELECT CAT.SUBCATEGORY, ROUND(AVG(PLEDGEDAMOUNT), 1) AS AVERAGE_AMOUNT_PLEDGED
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAT.SUBCATEGORY
ORDER BY ROUND(AVG(PLEDGEDAMOUNT), 1) DESC
FETCH NEXT 10 ROWS;

/*
Total Pledged Amount by Day of Week for Successful Projects
*/
SELECT CAL.DAYOFWEEK, PRO.PROJECTSTATE, SUM(PRO.PLEDGEDAMOUNT)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAL.DAYOFWEEK, PRO.PROJECTSTATE
HAVING PRO.PROJECTSTATE = 'successful'
ORDER BY SUM(PRO.PLEDGEDAMOUNT) DESC;

/*
Total Pledged Amount by Day of Week and Project Status
*/
SELECT CAL.DAYOFWEEK, PRO.PROJECTSTATE, SUM(PRO.PLEDGEDAMOUNT)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAL.DAYOFWEEK, PRO.PROJECTSTATE
ORDER BY SUM(PLEDGEDAMOUNT) DESC;


/*
Total Amount Pledged by Year and ProjectState
*/
SELECT *
 FROM (
    SELECT CAL.YEAR, PRO.PROJECTSTATE, SUM(PRO.PLEDGEDAMOUNT)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAL.YEAR, PRO.PROJECTSTATE
ORDER BY SUM(PLEDGEDAMOUNT) DESC
 )
WHERE ROWNUM <= 10;



/*
Total Amount of Projects by Year and ProjectState
*/
SELECT CAL.YEAR, PRO.PROJECTSTATE, COUNT(PRO.PROJECTID)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAL.YEAR, PRO.PROJECTSTATE
ORDER BY PRO.PROJECTSTATE, SUM(PLEDGEDAMOUNT) DESC;


/*
Total Amount Pledged by DayofWeek and ProjectState
*/
SELECT CAL.DAYOFWEEK, PRO.PROJECTSTATE, SUM(PRO.PLEDGEDAMOUNT)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAL.DAYOFWEEK, PRO.PROJECTSTATE
ORDER BY SUM(PLEDGEDAMOUNT) DESC;

/*
Total Amount Pledged by DayofWeek and Project State
*/
SELECT CAL.DAYOFWEEK, SUM(PRO.PLEDGEDAMOUNT)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAL.DAYOFWEEK
ORDER BY SUM(PLEDGEDAMOUNT) DESC;

/*
Total Proportion Reached by Main Categories
*/
SELECT CAT.MAINCATEGORY, SUM(PRO.PROPORTIONREACHED)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAT.MAINCATEGORY
ORDER BY SUM(PRO.PROPORTIONREACHED) DESC;


/*
Total Proportion Reached and Total Backers by Countries
*/
SELECT COU.COUNTRYCODE, SUM(PRO.PROPORTIONREACHED), SUM(PRO.BACKERS)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY COU.COUNTRYCODE
ORDER BY SUM(PRO.PROPORTIONREACHED) DESC;

/*
Number of Projects by Countries and Project State
*/
SELECT COU.COUNTRYCODE, PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) AS NUM_OF_PROJECTS
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY COU.COUNTRYCODE, PRO.PROJECTSTATE
ORDER BY COUNT(PRO.PROJECTSTATE) DESC;

/*
Total Number of Projects by Countries 
*/
SELECT COU.COUNTRYCODE, COUNT(PRO.PROJECTID) AS NUM_OF_PROJECTS
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY COU.COUNTRYCODE
ORDER BY COUNT(PRO.PROJECTID) DESC;


/*
Total Number of Projects by Year and Project State
*/
SELECT CAL.YEAR, PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) AS NUM_OF_PROJECTS
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAL.YEAR, PRO.PROJECTSTATE
ORDER BY PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) DESC;


/*
Total Number of Backers by Main Categories
*/
SELECT CAT.MAINCATEGORY, COUNT(PRO.BACKERS) AS NUM_OF_BACKERS
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAT.MAINCATEGORY
ORDER BY COUNT(PRO.BACKERS) DESC;

/*
Total Number of Backers by Year
*/
SELECT CAL.YEAR, COUNT(PRO.BACKERS) AS NUM_OF_BACKERS
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAL.YEAR
ORDER BY COUNT(PRO.BACKERS) DESC;



/*
Projects by Main Categories and Project State that have less than 100 backers
*/
SELECT CAT.MAINCATEGORY, PRO.PROJECTID, PRO.PROJECTSTATE, PRO.BACKERS
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
    AND PRO.BACKERS < 100;

/*
Total Number of Projects by Main Categories and Project State that have less than 100 backers
*/    
SELECT CAT.MAINCATEGORY, PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) AS Num_of_Projects 
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
    AND PRO.BACKERS < 100
GROUP BY CAT.MAINCATEGORY, PRO.PROJECTSTATE
ORDER BY COUNT(PRO.PROJECTID) DESC;

/*
Total Number of Projects by Main Categories that were successful and had less than 100 backers
*/
SELECT CAT.MAINCATEGORY, PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) AS Num_of_Projects 
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
    AND PRO.BACKERS < 100
    AND PRO.PROJECTSTATE = 'successful'
GROUP BY CAT.MAINCATEGORY, PRO.PROJECTSTATE
ORDER BY COUNT(PRO.PROJECTID) DESC;

/*
Average Proportion Reached and Total Backers by Countries
*/
SELECT COU.COUNTRYCODE, AVG(PRO.PROPORTIONREACHED), SUM(PRO.BACKERS)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY COU.COUNTRYCODE
ORDER BY AVG(PRO.PROPORTIONREACHED) DESC;

/*
Mean Proportion Reached by Main Categories
*/
SELECT CAT.MAINCATEGORY, AVG(PRO.PROPORTIONREACHED)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAT.MAINCATEGORY
ORDER BY AVG(PRO.PROPORTIONREACHED) DESC;

SELECT 
count(CASE WHEN PRO.GOALAMOUNT<= 1000 THEN 1 END) AS '1000',
count(CASE WHEN PRO.GOALAMOUNT> 1000 AND PRO.GOALAMOUNT <= 10000 THEN 1 END) AS '10000',
count(CASE WHEN PRO.GOALAMOUNT> 10000 AND PRO.GOALAMOUNT <= 100000 THEN 1 END) AS '100000',
count(CASE WHEN PRO.GOALAMOUNT> 100000 AND PRO.GOALAMOUNT <= 1000000 THEN 1 END) AS '1000000',
count(CASE WHEN PRO.GOALAMOUNT> 1000000 THEN 1 END) AS '1000000+',
FROM (SELECT PRO.GOALAMOUNT FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES) AS GoalAmount_Bins;

/*
Number of Projects by Countries and Project State
*/
SELECT COU.COUNTRYCODE, PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) AS NUM_OF_PROJECTS, 
COUNT(PRO.PROJECTID) (AS Country_Total FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
    GROUP BY COU.COUNTRYCODE)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY COU.COUNTRYCODE, PRO.PROJECTSTATE
ORDER BY COUNT(PRO.PROJECTSTATE) DESC;

/*
Number of Projects by Countries and Project State
*/
SELECT COU.COUNTRYCODE, PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) AS NUM_OF_PROJECTS, * ( 
FROM (SELECT COUNT(PRO.PROJECTID) AS Country_Total, COU.COUNTRYCODE
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES)
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY COU.COUNTRYCODE, PRO.PROJECTSTATE
ORDER BY COUNT(PRO.PROJECTSTATE) DESC;


/*
Total Number of Projects by Categories that were successful (first 10)
*/
SELECT *
FROM(SELECT CAT.MAINCATEGORY, PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) AS NUM_OF_PROJECTS
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAT.MAINCATEGORY, PRO.PROJECTSTATE
HAVING PRO.PROJECTSTATE = 'successful'
ORDER BY PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) DESC)
WHERE ROWNUM <= 10;

/*
Total Number of Projects by Sub Categories that were successful (first 10)
*/
SELECT *
FROM(SELECT CAT.SUBCATEGORY, PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) AS NUM_OF_PROJECTS
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY CAT.SUBCATEGORY, PRO.PROJECTSTATE
HAVING PRO.PROJECTSTATE = 'successful'
ORDER BY PRO.PROJECTSTATE, COUNT(PRO.PROJECTID) DESC)
WHERE ROWNUM <= 10;

/*
SELECT PRO.PROJECTSTATE, COUNT(PRO.PROJECTID),
count(CASE WHEN PRO.GOALAMOUNT<= 1000 THEN 1 END) AS '1000',
count(CASE WHEN PRO.GOALAMOUNT> 1000 AND PRO.GOALAMOUNT <= 10000 THEN 1 END) AS '10000',
count(CASE WHEN PRO.GOALAMOUNT> 10000 AND PRO.GOALAMOUNT <= 100000 THEN 1 END) AS '100000',
count(CASE WHEN PRO.GOALAMOUNT> 100000 AND PRO.GOALAMOUNT <= 1000000 THEN 1 END) AS '1000000',
count(CASE WHEN PRO.GOALAMOUNT> 1000000 THEN 1 END) AS '1000000+',
FROM (SELECT PRO.GOALAMOUNT FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES) AS GoalAmount_Bins;
*/

/*    
SELECT COUNT(PRO.PROJECTID)
      case WHEN PRO.GOALAMOUNT<= 1000 THEN '1000',
           WHEN PRO.GOALAMOUNT> 1000 AND PRO.GOALAMOUNT <= 10000 THEN '10000',
           WHEN PRO.GOALAMOUNT> 10000 AND PRO.GOALAMOUNT <= 100000 THEN '100000',
           WHEN PRO.GOALAMOUNT> 100000 AND PRO.GOALAMOUNT <= 1000000 THEN '1000000',
           ELSE 'Over 1000000',
      end AS GoalRange,
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
  GROUP BY PRO.PROJECTSTATE;
*/  
  
/*SELECT PRO.PROJECTSTATE,
       FLOOR(PRO.GOALAMOUNT/1000) AS GOAL_RANGE,
       CONCAT(1000*FLOOR(GOALAMOUNT/1000), "-", 1000*FLOOR(price/1000)+999) AS 10000
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY GOAL_RANGE;*/

SELECT PRO.PROJECTSTATE,
    COUNT(CASE WHEN PRO.GOALAMOUNT <= 1000 THEN 1 ELSE NULL END) AS "<=1000",
    COUNT(CASE WHEN PRO.GOALAMOUNT > 1000 AND PRO.GOALAMOUNT <= 10000 THEN 1 ELSE NULL END) AS "1000 - 10000",
    COUNT(CASE WHEN PRO.GOALAMOUNT > 10000 AND PRO.GOALAMOUNT <= 100000 THEN 1 ELSE NULL END) AS "10000 - 100000",
    COUNT(CASE WHEN PRO.GOALAMOUNT > 100000 AND PRO.GOALAMOUNT <= 10000000 THEN 1 ELSE NULL END) AS "100000 - 10000000",
    COUNT(CASE WHEN PRO.GOALAMOUNT > 1000000 THEN 1 ELSE NULL END) AS "> 1000000"
FROM PROJECT_T PRO, COUNTRY_T COU, CATEGORY_T CAT, CALENDAR_T CAL
WHERE PRO.CATEGORYID = CAT.CATEGORYID
    AND PRO.COUNTRYCODE = COU.COUNTRYCODE
    AND PRO.DEADLINE = CAL.DATES
GROUP BY PRO.PROJECTSTATE;